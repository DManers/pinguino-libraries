# ----------------------------------------------------------------------
# Makefile32.linux
# Linux Makefile for 32-bit Pinguino
# Regis Blanchot <rblanchot@gmail.com>
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# Directories
# ----------------------------------------------------------------------
# cf. qtgui/pinguino_api/pinguino_tools.py
# _IDE_PROC_
# _IDE_BOARD_

# _IDE_PDEDIR_
# _IDE_BINDIR_ (default /usr/bin)
# _IDE_P32DIR_ (default /usr/share/pinguino-11/p32)
# _IDE_SRCDIR_
# _IDE_HEAP_SIZE_
# _IDE_MIPS16_ENABLE_
# _IDE_OPTIMIZATION_
#-I$(_IDE_SRCDIR_)\
#

INCDIR		= $(_IDE_P32DIR_)/include
LKRDIR		= $(_IDE_P32DIR_)/lkr
OBJDIR		= $(_IDE_USERHOMEDIR_)/source/obj/non-free

INCLUDEDIRS	= -I$(INCDIR)/non-free\
			  -I$(INCDIR)/pinguino/core\
			  -I$(INCDIR)/pinguino/libraries\
			  -I$(LKRDIR)\
			  -I$(_IDE_PDEDIR_)\
			  -I$(OBJDIR)

LIBDIRS		= -L$(OBJDIR)/usb

# ----------------------------------------------------------------------
# Various options
# ----------------------------------------------------------------------
# - heap size / Regis Blanchot 2012
# - cdc library / Jean-pierre Mandon 2012
# - MIPS16/MIPS32 option (MIPS16 option could drastically reduce code size) / ??? 2013
# - unsupported record in hex file / Jean-pierre Mandon 2012
#		04		 : 4 bytes
#		0000	 : address
#		05		 : record type = Start_Linear_Address_Record
#		9D004000 : address where the user program should start
#				 : _RESET_ADDR (see lkr/procdefs.ld)
#		1A		 : checksum
# ----------------------------------------------------------------------

ifneq (,$(filter $(_IDE_BOARD_),PIC32_PINGUINO_220 PINGUINO32MX220 PINGUINO32MX250 PINGUINO32MX270))
	CDCLIBRARY  = libcdc220.a
	BADRECORD   = '^:040000059D0040001A'
else
	CDCLIBRARY  = libcdc.a
	BADRECORD   ='^:040000059D006000FA'
endif

# ----------------------------------------------------------------------
# commands
# ----------------------------------------------------------------------

ifdef CPLUPLUS
	CC		  = $(_IDE_BINDIR_)/p32-g++
	LIBS	  = -lstdc++ -lm -lgcc -lc
else
	CC		  = $(_IDE_BINDIR_)/p32-gcc
	LIBS	  = -lm -lgcc -lc
endif

OBJC		  = $(_IDE_BINDIR_)/p32-objcopy

RM			  = rm -f -v
CP			  = cp
MV			  = mv

# ----------------------------------------------------------------------
# flags
# ----------------------------------------------------------------------

ifeq "$(_IDE_MIPS16_ENABLE_)" "true"
	# Generate MIPS16 code.
	MIPS16_OPT=-mips16
	# makes non-MIPS16 and MIPS16 code link-compatible.
	MIPS16_INTER=-minterlink-mips16
endif

#-fdollars-in-identifiers for ISRwrapper.S
CFLAGS			= -fdollars-in-identifiers $(INCLUDEDIRS)

LDFLAGS			= $(LIBDIRS) $(LIBS)

ELF_FLAGS		= -EL -march=24kc -msoft-float \
                  $(_IDE_OPTIMIZATION_) $(MIPS16_INTER) \
				  -ffunction-sections \
				  -fdata-sections \
				  -Wl,--gc-sections \
				  -Wl,-L$(OBJDIR) \
				  -Wl,--defsym,_min_heap_size=$(_IDE_HEAP_SIZE_) \
				  -Wl,-Map=$(_IDE_SRCDIR_)/output.map \
				  -D __PIC32MX__ \
				  -D __$(_IDE_PROC_)__ \
				  -D $(_IDE_BOARD_) \
				  -T$(LKRDIR)/$(_IDE_BOARD_)/procdefs.ld \
				  -T$(LKRDIR)/$(_IDE_BOARD_)/elf32pic32mx.x

# ----------------------------------------------------------------------
# rules
# ----------------------------------------------------------------------

all: clean copy compile convert correct

clean:
	# ------------------------------------------------------------------
	# cleaning all build files
	# ------------------------------------------------------------------
	$(RM) $(_IDE_SRCDIR_)/main32.o
	$(RM) $(_IDE_SRCDIR_)/main32.elf
	$(RM) $(_IDE_SRCDIR_)/main32.hex
	$(RM) $(OBJDIR)/processor.o

copy:
	# ------------------------------------------------------------------
	# adding proc. definitions
	# ------------------------------------------------------------------
	$(CP) $(OBJDIR)/$(_IDE_PROC_).o $(OBJDIR)/processor.o

compile:
	# ------------------------------------------------------------------
	# compiling and linking
	# ------------------------------------------------------------------
	#$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) -o $(_IDE_SRCDIR_)/main32.elf $(_IDE_SRCDIR_)/main32.c
	$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) $(MIPS16_OPT) -c -g -Wa,-a,-ad $(_IDE_SRCDIR_)/main32.c > $(_IDE_SRCDIR_)/main32.lst
	$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) $(MIPS16_OPT) -c -o $(_IDE_SRCDIR_)/main32.o $(_IDE_SRCDIR_)/main32.c
	$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) -o $(_IDE_SRCDIR_)/main32.elf\
		$(_IDE_SRCDIR_)/main32.o\
		$(OBJDIR)/crt0.S\
		$(OBJDIR)/processor.o\
		$(OBJDIR)/usb/$(CDCLIBRARY)\
		$(OBJDIR)/usb/libadb.a\
		$(LKRDIR)/$(_IDE_BOARD_)/ISRwrapper.S\
		$(INCDIR)/non-free/p32xxxx.h\
		$(LIBS)

convert:
	# ------------------------------------------------------------------
	# converting elf to hex
	# ------------------------------------------------------------------
	$(OBJC) -O ihex $(_IDE_SRCDIR_)/main32.elf $(_IDE_SRCDIR_)/main32.hex

correct:
	# ------------------------------------------------------------------
	# fixing bad record
	# ------------------------------------------------------------------
	grep --binary --invert-match $(BADRECORD) $(_IDE_SRCDIR_)/main32.hex > $(_IDE_SRCDIR_)/temp.hex
	$(MV) $(_IDE_SRCDIR_)/temp.hex $(_IDE_SRCDIR_)/main32.hex
